credentials:
  system:
    domainCredentials:
      - credentials:
      # must be 4 spaced after this point
          - basicSSHUserPrivateKey:
              description: "Jenkins Github SSH Key"
              id: "JenkinsGithubSSHKey"
              privateKeySource:
                directEntry:
                  privateKey: ${JENKINS_GITHUB_SSH_KEY}
              scope: GLOBAL
              username: ${JENKINS_GITHUB_SSH_KEY_USERNAME}
jenkins:
  systemMessage: "Controlled by Configuration as Code"
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Administer:anonymous"
  clouds:
  - ecs:
      cluster: "arn:aws:ecs:us-west-2:123456789012:cluster/kcdc-jenkins-workers"
      credentialsId: ""
      jenkinsUrl: "http://controller.kcdc-jenkins:8080"
      name: "jenkins-worker"
      regionName: "us-west-2"
      templates:
      - assignPublicIp: false
        subnets: "subnet-00560ac055bceb0ac,subnet-09a79ea463bd931d8"
        securityGroups: "sg-0c01ae9e61b7e8b61"
        containerUser: "root"
        cpu: 1024
        image: "123456789012.dkr.ecr.us-west-2.amazonaws.com/kcdc-jenkins-worker-eng:latest"
        label: "eng"
        launchType: "FARGATE"
        logDriver: "awslogs"
        logDriverOptions:
        - name: "awslogs-group"
          value: "/ecs/kcdc-jenkins/workers/eng"
        - name: "awslogs-region"
          value: "us-west-2"
        - name: "awslogs-stream-prefix"
          value: "jenkins-worker-eng"
        memory: 0
        memoryReservation: 2048
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        sharedMemorySize: 0
        taskrole: "arn:aws:iam::123456789012:role/kcdc-jenkins-worker-eng"
        templateName: "eng"
        uniqueRemoteFSRoot: false
        executionRole: "arn:aws:iam::123456789012:role/kcdc-jenkins"
  - ecs:
      cluster: "arn:aws:ecs:us-west-2:123456789012:cluster/kcdc-jenkins-workers"
      credentialsId: ""
      jenkinsUrl: "http://controller.kcdc-jenkins:8080"
      name: "jenkins-worker"
      regionName: "us-west-2"
      templates:
      - assignPublicIp: false
        subnets: "subnet-00560ac055bceb0ac,subnet-09a79ea463bd931d8"
        securityGroups: "sg-0c01ae9e61b7e8b61"
        containerUser: "root"
        cpu: 1024
        image: "123456789012.dkr.ecr.us-west-2.amazonaws.com/kcdc-jenkins-worker-eng:latest"
        label: "eng"
        launchType: "FARGATE"
        logDriver: "awslogs"
        logDriverOptions:
        - name: "awslogs-group"
          value: "/ecs/kcdc-jenkins/workers/eng"
        - name: "awslogs-region"
          value: "us-west-2"
        - name: "awslogs-stream-prefix"
          value: "jenkins-worker-eng"
        memory: 0
        memoryReservation: 2048
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        sharedMemorySize: 0
        taskrole: "arn:aws:iam::123456789012:role/kcdc-jenkins-worker-eng"
        templateName: "eng"
        uniqueRemoteFSRoot: false
        executionRole: "arn:aws:iam::123456789012:role/kcdc-jenkins"
  - ecs:
      cluster: "arn:aws:ecs:us-west-2:123456789012:cluster/kcdc-jenkins-workers"
      credentialsId: ""
      jenkinsUrl: "http://controller.kcdc-jenkins:8080"
      name: "jenkins-worker"
      regionName: "us-west-2"
      templates:
      - assignPublicIp: false
        subnets: "subnet-00560ac055bceb0ac,subnet-09a79ea463bd931d8"
        securityGroups: "sg-0c01ae9e61b7e8b61"
        containerUser: "root"
        cpu: 1024
        image: "123456789012.dkr.ecr.us-west-2.amazonaws.com/kcdc-jenkins-worker-docker:latest"
        label: "docker"
        launchType: "FARGATE"
        logDriver: "awslogs"
        logDriverOptions:
        - name: "awslogs-group"
          value: "/ecs/kcdc-jenkins/workers/docker"
        - name: "awslogs-region"
          value: "us-west-2"
        - name: "awslogs-stream-prefix"
          value: "jenkins-worker-docker"
        memory: 0
        memoryReservation: 2048
        networkMode: "awsvpc"
        privileged: false
        remoteFSRoot: "/home/jenkins"
        sharedMemorySize: 0
        taskrole: "arn:aws:iam::123456789012:role/kcdc-jenkins-worker-docker"
        templateName: "docker"
        uniqueRemoteFSRoot: false
        executionRole: "arn:aws:iam::123456789012:role/kcdc-jenkins"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 2
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy: "systemAuthorizationStrategy"
  sSHD:
    port: -1
  scriptApproval:
    approvedSignatures:
    - "method groovy.lang.GroovyObject getProperty java.lang.String"
    - "method groovy.lang.GroovyObject invokeMethod java.lang.String java.lang.Object"
    - "method groovy.lang.Script run"
unclassified:
  # simple-theme-plugin:
  #   elements:
  #     - cssUrl:
  #         url: "http://jenkins.internal/userContent/material-indigo.css"
  ansiColorBuildWrapper:
    colorMaps:
    - black: "#000000"
      blackB: "#4C4C4C"
      blue: "#1E90FF"
      blueB: "#4682B4"
      cyan: "#00CDCD"
      cyanB: "#00FFFF"
      green: "#00CD00"
      greenB: "#00FF00"
      magenta: "#CD00CD"
      magentaB: "#FF00FF"
      name: "xterm"
      red: "#CD0000"
      redB: "#FF0000"
      white: "#E5E5E5"
      whiteB: "#FFFFFF"
      yellow: "#CDCD00"
      yellowB: "#FFFF00"
    - black: "#000000"
      blackB: "#555555"
      blue: "#0000AA"
      blueB: "#5555FF"
      cyan: "#00AAAA"
      cyanB: "#55FFFF"
      defaultBackground: 0
      defaultForeground: 7
      green: "#00AA00"
      greenB: "#55FF55"
      magenta: "#AA00AA"
      magentaB: "#FF55FF"
      name: "vga"
      red: "#AA0000"
      redB: "#FF5555"
      white: "#AAAAAA"
      whiteB: "#FFFFFF"
      yellow: "#AA5500"
      yellowB: "#FFFF55"
    - black: "black"
      blackB: "black"
      blue: "blue"
      blueB: "blue"
      cyan: "cyan"
      cyanB: "cyan"
      green: "green"
      greenB: "green"
      magenta: "magenta"
      magentaB: "magenta"
      name: "css"
      red: "red"
      redB: "red"
      white: "white"
      whiteB: "white"
      yellow: "yellow"
      yellowB: "yellow"
    - black: "#2E3436"
      blackB: "#2E3436"
      blue: "#3465A4"
      blueB: "#3465A4"
      cyan: "#06989A"
      cyanB: "#06989A"
      defaultBackground: 0
      defaultForeground: 7
      green: "#4E9A06"
      greenB: "#4E9A06"
      magenta: "#75507B"
      magentaB: "#75507B"
      name: "gnome-terminal"
      red: "#CC0000"
      redB: "#CC0000"
      white: "#D3D7CF"
      whiteB: "#D3D7CF"
      yellow: "#C4A000"
      yellowB: "#C4A000"
  buildMonitorView:
    permissionToCollectAnonymousUsageStatistics: true
  defaultFolderConfiguration:
    healthMetrics:
    - worstChildHealthMetric:
        recursive: true
  gitSCM:
    createAccountBasedOnEmail: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  pollSCM:
    pollingThreadCount: 10
  timestamper:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  upstream:
    globalUpstreamFilterStrategy: UseOldest
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
jobs:
  - script: >
      job('jenkins-job-dsl') {
        scm {
          git {
            remote {
              name 'origin'
              url 'https://github.com/Trility/jenkins-fargate-kcdc-2021-jenkins-job-dsl.git'
            }
            branch 'main'
          }
        }
        steps {
          dsl {
            external('*folders.groovy',
                     'jobs/**/*.groovy')
            removeAction('DISABLE')
            removeViewAction('DELETE')
            additionalClasspath('classes')
          }
        }
        wrappers {
          colorizeOutput()
          timestamps()
        }
      }
